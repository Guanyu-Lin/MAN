amlModuleIdentifier: 
  namespace: microsoft.com/cat
  moduleName: SAR Scoring
  moduleVersion: 1.1.1
description: |
    Python SAR Recommenders
    repo: https://github.com/Microsoft/Recommenders
metadata:
  annotations:
    tags: ["Recommenders"]
inputs:
- name: Trained model
  type: AnyDirectory
  description: The directory contains SAR model.
- name: Dataset to score
  type: AnyDirectory
  description: Dataset to score
- name: Score type
  type: Enum
  default: Item recommendation
  description: The type of score which the recommender should output
  options:
  - Rating prediction:
    - name: Items to predict
      type: Enum
      default: Items in score set
      description: The set of items to predict for test users
      options:
      - Items in training set
      - Items in score set
  - Item recommendation:
    - name: Ranking metric
      type: Enum
      default: Rating
      description: The metric of ranking used in item recommendation
      options:
      - Rating:
        - name: Remove seen items
          type: Boolean
          description: Flag to remove items seen in training from recommendation
          default: false
      - Similarity
      - Popularity
    - name: Top k
      type: Integer
      default: 10
      description: The number of top items to recommend.
      min: 1
    - name: Sort top k
      type: Boolean
      description: Flag to sort top k results.
      default: true
- name: Normalize
  type: Boolean
  default: false
  description: Flag to normalize predictions to scale of original ratings
outputs:
- name: Score result
  type: AnyDirectory
  description: Ratings or items to output
implementation:
  container:
    amlEnvironment:
      python:
        condaDependenciesFile: sar_conda.yaml
    additionalIncludes:
      - ../../../
    command: [python, reco_utils/azureml/azureml_designer_modules/entries/score_sar_entry.py]
    args: [
      --trained-model, {inputPath: Trained model},
      --dataset-to-score, {inputPath: Dataset to score},
      --score-type, {inputValue: Score type},
      [--items-to-predict, {inputValue: Items to predict}],
      --normalize, {inputValue: Normalize},
      [--ranking-metric, {inputValue: Ranking metric}],
      [--top-k, {inputValue: Top k}],
      [--sort-top-k, {inputValue: Sort top k}],
      [--remove-seen-items, {inputValue: Remove seen items}],
      --score-result, {outputPath: Score result},
    ]
